{"remainingRequest":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/src/components/lb-table/lb-column.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/src/components/lb-table/lb-column.vue","mtime":1559565550000},{"path":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LbRender from './lb-render'\nimport forced from './forced.js'\nexport default {\n  name: 'LbColumn',\n  props: {\n    column: Object,\n    headerAlign: String,\n    align: String\n  },\n  components: {\n    LbRender\n  },\n  created () {\n    if (this.column.type) {\n      this.column.renderHeader = forced[this.column.type].renderHeader\n      this.column.render = this.column.render || forced[this.column.type].renderCell\n    }\n    if (this.column.formatter) {\n      this.column.render = (h, scope) => {\n        return <span>{ scope.column.formatter(scope.row, scope.column, scope.row, scope.$index) }</span>\n      }\n    }\n    if (!this.column.render) {\n      this.column.render = (h, scope) => {\n        return <span>{ scope.row[scope.column.property] }</span>\n      }\n    }\n    if (!this.column.renderHeader) {\n      this.column.renderHeader = (h, scope) => {\n        return <span>{ scope.column.label }</span>\n      }\n    }\n  }\n}\n",{"version":3,"sources":["lb-column.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"lb-column.vue","sourceRoot":"src/components/lb-table","sourcesContent":["/*\n * FileName: lb-column.vue\n * Remark: element-column\n * Project: lb-element-table\n * Author: LiuBing\n * File Created: Tuesday, 19th March 2019 9:58:23 am\n * Last Modified: Tuesday, 19th March 2019 10:14:42 am\n * Modified By: LiuBing\n */\n\n<template>\n  <el-table-column v-bind=\"$attrs\"\n    v-on=\"$listeners\"\n    :prop=\"column.prop\"\n    :label=\"column.label\"\n    :type=\"column.type\"\n    :index=\"column.index\"\n    :column-key=\"column.columnKey\"\n    :width=\"column.width\"\n    :min-width=\"column.minWidth\"\n    :fixed=\"column.fixed\"\n    :render-header=\"column.renderHeader\"\n    :sortable=\"column.sortable || false\"\n    :sort-method=\"column.sortMethod\"\n    :sort-by=\"column.sortBy\"\n    :sort-orders=\"column.sortOrders\"\n    :resizable=\"column.resizable || true\"\n    :formatter=\"column.formatter\"\n    :show-overflow-tooltip=\"column.showOverflowTooltip || false\"\n    :align=\"column.align || align || 'left'\"\n    :header-align=\"column.headerAlign || headerAlign || column.align || align || 'left'\"\n    :class-name=\"column.className\"\n    :label-class-name=\"column.labelClassName\"\n    :selectable=\"column.selectable\"\n    :reserve-selection=\"column.reserveSelection || false\"\n    :filters=\"column.filters\"\n    :filter-placement=\"column.filterPlacement\"\n    :filter-multiple=\"column.filterMultiple\"\n    :filter-method=\"column.filterMethod\"\n    :filtered-value=\"column.filteredValue\">\n\n    <template slot=\"header\"\n      slot-scope=\"scope\">\n      <lb-render :prop-column=\"column\"\n        :scope=\"scope\"\n        :render=\"column.renderHeader\">\n      </lb-render>\n    </template>\n\n    <template slot-scope=\"scope\">\n      <lb-render :prop-column=\"column\"\n        :scope=\"scope\"\n        :render=\"column.render\">\n      </lb-render>\n    </template>\n\n    <template v-if=\"column.children\">\n      <lb-column v-for=\"(col, index) in column.children\"\n        :key=\"index\"\n        :column=\"col\">\n      </lb-column>\n    </template>\n  </el-table-column>\n</template>\n\n<script>\nimport LbRender from './lb-render'\nimport forced from './forced.js'\nexport default {\n  name: 'LbColumn',\n  props: {\n    column: Object,\n    headerAlign: String,\n    align: String\n  },\n  components: {\n    LbRender\n  },\n  created () {\n    if (this.column.type) {\n      this.column.renderHeader = forced[this.column.type].renderHeader\n      this.column.render = this.column.render || forced[this.column.type].renderCell\n    }\n    if (this.column.formatter) {\n      this.column.render = (h, scope) => {\n        return <span>{ scope.column.formatter(scope.row, scope.column, scope.row, scope.$index) }</span>\n      }\n    }\n    if (!this.column.render) {\n      this.column.render = (h, scope) => {\n        return <span>{ scope.row[scope.column.property] }</span>\n      }\n    }\n    if (!this.column.renderHeader) {\n      this.column.renderHeader = (h, scope) => {\n        return <span>{ scope.column.label }</span>\n      }\n    }\n  }\n}\n</script>\n"]}]}