{"remainingRequest":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/babel-loader/lib/index.js!/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/src/components/lb-table/lb-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/src/components/lb-table/lb-table.vue","mtime":1559565550000},{"path":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/humingfeng/Documents/ideaWork/GitHub/lb-element-table-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LbColumn from './lb-column';\nexport default {\n  props: {\n    column: Array,\n    data: Array,\n    spanMethod: Function,\n    pagination: {\n      type: Boolean,\n      default: false\n    },\n    paginationTop: {\n      type: String,\n      default: '15px'\n    },\n    paginationAlign: {\n      type: String,\n      default: 'right'\n    },\n    merge: Array\n  },\n  components: {\n    LbColumn: LbColumn\n  },\n  data: function data() {\n    return {\n      mergeLine: {},\n      mergeIndex: {}\n    };\n  },\n  created: function created() {\n    this.getMergeArr(this.data, this.merge);\n  },\n  computed: {\n    dataLength: function dataLength() {\n      return this.data.length;\n    }\n  },\n  methods: {\n    clearSelection: function clearSelection() {\n      this.$refs.elTable.clearSelection();\n    },\n    toggleRowSelection: function toggleRowSelection(row, selected) {\n      this.$refs.elTable.toggleRowSelection(row, selected);\n    },\n    toggleAllSelection: function toggleAllSelection() {\n      this.$refs.elTable.toggleAllSelection();\n    },\n    toggleRowExpansion: function toggleRowExpansion(row, expanded) {\n      this.$refs.elTable.toggleRowExpansion(row, expanded);\n    },\n    setCurrentRow: function setCurrentRow(row) {\n      this.$refs.elTable.setCurrentRow(row);\n    },\n    clearSort: function clearSort() {\n      this.$refs.elTable.clearSort();\n    },\n    clearFilter: function clearFilter(columnKey) {\n      this.$refs.elTable.clearFilter(columnKey);\n    },\n    doLayout: function doLayout() {\n      this.$refs.elTable.doLayout();\n    },\n    sort: function sort(prop, order) {\n      this.$refs.elTable.sort(prop, order);\n    },\n    paginationCurrentChange: function paginationCurrentChange(val) {\n      this.$emit('p-current-change', val);\n    },\n    getMergeArr: function getMergeArr(tableData, merge) {\n      var _this = this;\n\n      if (!merge) return;\n      this.mergeLine = {};\n      this.mergeIndex = {};\n      merge.forEach(function (item, k) {\n        tableData.forEach(function (data, i) {\n          if (i === 0) {\n            _this.mergeIndex[item] = _this.mergeIndex[item] || [];\n\n            _this.mergeIndex[item].push(1);\n\n            _this.mergeLine[item] = 0;\n          } else {\n            if (data[item] === tableData[i - 1][item]) {\n              _this.mergeIndex[item][_this.mergeLine[item]] += 1;\n\n              _this.mergeIndex[item].push(0);\n            } else {\n              _this.mergeIndex[item].push(1);\n\n              _this.mergeLine[item] = i;\n            }\n          }\n        });\n      });\n    },\n    mergeMethod: function mergeMethod(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n      var index = this.merge.indexOf(column.property);\n\n      if (index > -1) {\n        var _row = this.mergeIndex[this.merge[index]][rowIndex];\n\n        var _col = _row > 0 ? 1 : 0;\n\n        return {\n          rowspan: _row,\n          colspan: _col\n        };\n      }\n    }\n  },\n  watch: {\n    merge: function merge() {\n      this.getMergeArr(this.data, this.merge);\n    },\n    dataLength: function dataLength() {\n      this.getMergeArr(this.data, this.merge);\n    }\n  }\n};",{"version":3,"sources":["lb-table.vue"],"names":[],"mappings":"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","sourcesContent":["/*\n * FileName: lb-table.vue\n * Remark: element table\n * Project: lb-element-table\n * Author: LiuBing\n * File Created: Tuesday, 19th March 2019 9:55:27 am\n * Last Modified: Tuesday, 19th March 2019 9:55:34 am\n * Modified By: LiuBing\n */\n\n<template>\n  <div class=\"lb-table\">\n    <el-table ref=\"elTable\"\n      v-bind=\"$attrs\"\n      v-on=\"$listeners\"\n      :data=\"data\"\n      :span-method=\"this.merge ? this.mergeMethod : this.spanMethod\">\n      <lb-column v-bind=\"$attrs\"\n        v-for=\"(item, index) in column\"\n        :key=\"index\"\n        :column=\"item\">\n      </lb-column>\n    </el-table>\n    <el-pagination class=\"lb-table-pagination\"\n      v-if=\"pagination\"\n      v-bind=\"$attrs\"\n      v-on=\"$listeners\"\n      @current-change=\"paginationCurrentChange\"\n      :style=\"{ 'margin-top': paginationTop, 'text-align': paginationAlign }\">\n    </el-pagination>\n  </div>\n</template>\n\n<script>\nimport LbColumn from './lb-column'\nexport default {\n  props: {\n    column: Array,\n    data: Array,\n    spanMethod: Function,\n    pagination: {\n      type: Boolean,\n      default: false\n    },\n    paginationTop: {\n      type: String,\n      default: '15px'\n    },\n    paginationAlign: {\n      type: String,\n      default: 'right'\n    },\n    merge: Array\n  },\n  components: {\n    LbColumn\n  },\n  data () {\n    return {\n      mergeLine: {},\n      mergeIndex: {}\n    }\n  },\n  created () {\n    this.getMergeArr(this.data, this.merge)\n  },\n  computed: {\n    dataLength () {\n      return this.data.length\n    }\n  },\n  methods: {\n    clearSelection () {\n      this.$refs.elTable.clearSelection()\n    },\n    toggleRowSelection (row, selected) {\n      this.$refs.elTable.toggleRowSelection(row, selected)\n    },\n    toggleAllSelection () {\n      this.$refs.elTable.toggleAllSelection()\n    },\n    toggleRowExpansion (row, expanded) {\n      this.$refs.elTable.toggleRowExpansion(row, expanded)\n    },\n    setCurrentRow (row) {\n      this.$refs.elTable.setCurrentRow(row)\n    },\n    clearSort () {\n      this.$refs.elTable.clearSort()\n    },\n    clearFilter (columnKey) {\n      this.$refs.elTable.clearFilter(columnKey)\n    },\n    doLayout () {\n      this.$refs.elTable.doLayout()\n    },\n    sort (prop, order) {\n      this.$refs.elTable.sort(prop, order)\n    },\n    paginationCurrentChange (val) {\n      this.$emit('p-current-change', val)\n    },\n    getMergeArr (tableData, merge) {\n      if (!merge) return\n      this.mergeLine = {}\n      this.mergeIndex = {}\n      merge.forEach((item, k) => {\n        tableData.forEach((data, i) => {\n          if (i === 0) {\n            this.mergeIndex[item] = this.mergeIndex[item] || []\n            this.mergeIndex[item].push(1)\n            this.mergeLine[item] = 0\n          } else {\n            if (data[item] === tableData[i - 1][item]) {\n              this.mergeIndex[item][this.mergeLine[item]] += 1\n              this.mergeIndex[item].push(0)\n            } else {\n              this.mergeIndex[item].push(1)\n              this.mergeLine[item] = i\n            }\n          }\n        })\n      })\n    },\n    mergeMethod ({ row, column, rowIndex, columnIndex }) {\n      const index = this.merge.indexOf(column.property)\n      if (index > -1) {\n        const _row = this.mergeIndex[this.merge[index]][rowIndex]\n        const _col = _row > 0 ? 1 : 0\n        return {\n          rowspan: _row,\n          colspan: _col\n        }\n      }\n    }\n  },\n  watch: {\n    merge () {\n      this.getMergeArr(this.data, this.merge)\n    },\n    dataLength () {\n      this.getMergeArr(this.data, this.merge)\n    }\n  }\n}\n\n</script>\n"],"sourceRoot":"src/components/lb-table"}]}